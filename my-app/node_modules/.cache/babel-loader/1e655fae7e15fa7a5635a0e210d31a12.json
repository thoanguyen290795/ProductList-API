{"ast":null,"code":"import * as types from './../constant/ActionTypes';\nimport { remove, reject } from 'lodash';\n\nconst uuidv4 = require('uuid/v4');\n\nlet initialDefault = [];\n\nconst products = (state = initialDefault, action) => {\n  let id = null;\n\n  switch (action.type) {\n    case types.FETCH_PRODUCTS:\n      state = action.products;\n      return [...state];\n\n    case types.ADD_PRODUCT:\n      let {\n        product\n      } = action;\n      id = product.id;\n      state.push(product);\n      return [...state];\n\n    case types.DELETE_PRODUCT:\n      id = action.id;\n      remove(state, product => {\n        return product.id === id;\n      });\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nexport default products;","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/reactjs-redux-api-nghiepuit/my-app/src/reducers/products.js"],"names":["types","remove","reject","uuidv4","require","initialDefault","products","state","action","id","type","FETCH_PRODUCTS","ADD_PRODUCT","product","push","DELETE_PRODUCT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AACA,SAAQC,MAAR,EAAeC,MAAf,QAA4B,QAA5B;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAIC,cAAc,GAAG,EAArB;;AACA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAGF,cAAT,EAAwBG,MAAxB,KAAmC;AACpD,MAAIC,EAAE,GAAG,IAAT;;AACQ,UAAOD,MAAM,CAACE,IAAd;AACA,SAAKV,KAAK,CAACW,cAAX;AACIJ,MAAAA,KAAK,GAAGC,MAAM,CAACF,QAAf;AACA,aAAO,CAAC,GAAGC,KAAJ,CAAP;;AACJ,SAAKP,KAAK,CAACY,WAAX;AACI,UAAI;AAACC,QAAAA;AAAD,UAAYL,MAAhB;AACEC,MAAAA,EAAE,GAAGI,OAAO,CAACJ,EAAb;AACFF,MAAAA,KAAK,CAACO,IAAN,CAAWD,OAAX;AACA,aAAO,CAAC,GAAGN,KAAJ,CAAP;;AACJ,SAAKP,KAAK,CAACe,cAAX;AACIN,MAAAA,EAAE,GAAGD,MAAM,CAACC,EAAZ;AACAR,MAAAA,MAAM,CAACM,KAAD,EAAQM,OAAD,IAAW;AACpB,eAAOA,OAAO,CAACJ,EAAR,KAAeA,EAAtB;AACD,OAFG,CAAN;AAGA,aAAO,CAAC,GAAGF,KAAJ,CAAP;;AACA;AACA,aAAOA,KAAP;AAhBJ;AAkBP,CApBD;;AAqBA,eAAeD,QAAf","sourcesContent":["import * as types from './../constant/ActionTypes';\nimport {remove,reject} from 'lodash';\nconst uuidv4 = require('uuid/v4');\nlet initialDefault = []\nconst products = (state = initialDefault,action) => {\nlet id = null; \n        switch(action.type){\n        case types.FETCH_PRODUCTS:\n            state = action.products;\n            return [...state]; \n        case types.ADD_PRODUCT:\n            let {product} = action;\n              id = product.id;\n            state.push(product)\n            return [...state]\n        case types.DELETE_PRODUCT:\n            id = action.id\n            remove(state,(product)=>{\n                return product.id === id\n              });\n            return [...state]\n            default:\n            return state\n        }\n}\nexport default products; "]},"metadata":{},"sourceType":"module"}